{"_path":"/fps-tutorial","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Fps tutorial","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"fps-tutorial"},"children":[{"type":"text","value":"Fps tutorial"}]},{"type":"element","tag":"h2","props":{"id":"tutorial"},"children":[{"type":"text","value":"Tutorial"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On MeshInstance3D, add children MeshInstance3D -> click on mesh, create collision shape, simplified convex"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"creates optimized collision shape for the mesh"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"collision-add.PNG","src":"/collision-add.PNG"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On world add directionalLight3D and WorldEnvironment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"world add.PNG","src":"/world%20add.PNG"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When adding the CSBox3D check Use Collision"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add script to the player. (by default has the movement and jump)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Camera must be put in Node3D for "},{"type":"element","tag":"a","props":{"href":"https://docs.godotengine.org/en/latest/tutorials/3d/using_transforms.html","rel":["nofollow"]},"children":[{"type":"text","value":"reasons"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add controllers: Project -> Project settings -> Input Map\nAdd map object for testing: check usecollision -> select newShaderMaterial -> albedo to modify the color"}]},{"type":"element","tag":"h3","props":{"id":"all-players-code"},"children":[{"type":"text","value":"All players code"}]},{"type":"element","tag":"pre","props":{"className":"language-js shiki shiki-themes github-dark github-light","code":"// capture mouse\nfunc _ready() -> void:\n    Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)\n","language":"js","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#6A737D;--shiki-default:#6A737D"},"children":[{"type":"text","value":"// capture mouse\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":"func "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1"},"children":[{"type":"text","value":"_ready"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":"() "}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#F97583;--shiki-default:#D73A49"},"children":[{"type":"text","value":"->"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1"},"children":[{"type":"text","value":" void"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":":\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":"    Input."}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#B392F0;--shiki-default:#6F42C1"},"children":[{"type":"text","value":"set_mouse_mode"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":"(Input."}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#79B8FF;--shiki-default:#005CC5"},"children":[{"type":"text","value":"MOUSE_MODE_CAPTURED"}]},{"type":"element","tag":"span","props":{"style":"--shiki-dark:#E1E4E8;--shiki-default:#24292E"},"children":[{"type":"text","value":")\n"}]}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-godotengine shiki shiki-themes github-dark github-light","code":"extends CharacterBody3D\n\n\nvar speed\nconst JUMP_VELOCITY = 4.5\nconst WALK_SPEED = 5.8\nconst SPRINT_SPEED = 8.1\nconst SENSITIVITY = 0.01\n\n# bob variable make the camera jump in places\nconst BOB_FREQ = 2.0 # how much frequent camera jumps\nconst BOB_AMP = 0.08 # how much camera jumps\nvar t_bob = 0.0 # how far we are away from the sign variable\n\n# FOV variables\nconst BASE_FOV = 75.0\nconst FOV_CHANGE = 1.5\n\n# reference to nodes, you can drag and drop them\n@onready var head = $Head\n@onready var camera = $Head/Camera3D\n\n# capture the mouse\nfunc _ready() -> void:\n    Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)\n    \nfunc _unhandled_input(event: InputEvent) -> void:\n    if event is InputEventMouseMotion:\n        head.rotate_y(-event.relative.x * SENSITIVITY)\n        camera.rotate_x(-event.relative.y * SENSITIVITY)\n        camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-40), deg_to_rad((60)))\n\nfunc _physics_process(delta: float) -> void:\n    # Add the gravity.\n    if not is_on_floor():\n        velocity += get_gravity() * delta\n\n    # Handle jump.\n    if Input.is_action_just_pressed(\"jump\") and is_on_floor():\n        velocity.y = JUMP_VELOCITY\n        \n    # Handle Sprint\n    if Input.is_action_pressed(\"run\"):\n        speed = SPRINT_SPEED\n    else: \n        speed = WALK_SPEED\n\n    # Get the input direction and handle the movement/deceleration.\n    # As good practice, you should replace UI actions with custom gameplay actions.\n    var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")\n    # replce with head\n    var direction: Vector3 = (head.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()\n    if is_on_floor(): \n        if direction:\n            velocity.x = direction.x * speed\n            velocity.z = direction.z * speed\n        else:\n            velocity.x = lerp(velocity.x, direction.x * speed, delta * 7.0)\n            velocity.z = lerp(velocity.z, direction.z * speed, delta * 7.0)\n    else:\n        velocity.x = lerp(velocity.x, direction.x * speed, delta * 3.0)\n        velocity.z = lerp(velocity.z, direction.z * speed, delta * 3.0)\n    # head bob\n    t_bob += delta * velocity.length() * float(is_on_floor())\n    camera.transform.origin = _headbob(t_bob)\n    \n    # FOV \n    var velocity_clamped = clamp(velocity.length(), 0.5, SPRINT_SPEED * 2)\n    var target_fov = BASE_FOV + FOV_CHANGE * velocity_clamped\n    camera.fov = lerp(camera.fov, target_fov, delta * 8.0)\n\n    move_and_slide()\n    \nfunc _headbob(time) -> Vector3:\n    var pos = Vector3.ZERO\n    pos.y = sin(time * BOB_FREQ) * BOB_AMP\n    pos.x = cos(time * BOB_FREQ / 2) * BOB_AMP\n    return pos\n\n","filename":"Player.gd","language":"godotengine","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"extends CharacterBody3D\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"var speed\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const JUMP_VELOCITY = 4.5\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const WALK_SPEED = 5.8\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const SPRINT_SPEED = 8.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const SENSITIVITY = 0.01\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# bob variable make the camera jump in places\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const BOB_FREQ = 2.0 # how much frequent camera jumps\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const BOB_AMP = 0.08 # how much camera jumps\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"var t_bob = 0.0 # how far we are away from the sign variable\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# FOV variables\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const BASE_FOV = 75.0\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"const FOV_CHANGE = 1.5\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":19},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# reference to nodes, you can drag and drop them\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":20},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"@onready var head = $Head\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":21},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"@onready var camera = $Head/Camera3D\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":22},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":23},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"# capture the mouse\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":24},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"func _ready() -> void:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":25},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":26},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":27},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"func _unhandled_input(event: InputEvent) -> void:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":28},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    if event is InputEventMouseMotion:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":29},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        head.rotate_y(-event.relative.x * SENSITIVITY)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":30},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        camera.rotate_x(-event.relative.y * SENSITIVITY)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":31},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-40), deg_to_rad((60)))\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":32},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":33},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"func _physics_process(delta: float) -> void:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":34},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # Add the gravity.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":35},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    if not is_on_floor():\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":36},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        velocity += get_gravity() * delta\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":37},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":38},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # Handle jump.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":39},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    if Input.is_action_just_pressed(\"jump\") and is_on_floor():\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":40},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        velocity.y = JUMP_VELOCITY\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":41},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":42},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # Handle Sprint\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":43},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    if Input.is_action_pressed(\"run\"):\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":44},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        speed = SPRINT_SPEED\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":45},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    else: \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":46},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        speed = WALK_SPEED\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":47},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":48},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # Get the input direction and handle the movement/deceleration.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":49},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # As good practice, you should replace UI actions with custom gameplay actions.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":50},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":51},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # replce with head\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":52},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    var direction: Vector3 = (head.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":53},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    if is_on_floor(): \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":54},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        if direction:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":55},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"            velocity.x = direction.x * speed\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":56},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"            velocity.z = direction.z * speed\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":57},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        else:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":58},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"            velocity.x = lerp(velocity.x, direction.x * speed, delta * 7.0)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":59},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"            velocity.z = lerp(velocity.z, direction.z * speed, delta * 7.0)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":60},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    else:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":61},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        velocity.x = lerp(velocity.x, direction.x * speed, delta * 3.0)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":62},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        velocity.z = lerp(velocity.z, direction.z * speed, delta * 3.0)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":63},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # head bob\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":64},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    t_bob += delta * velocity.length() * float(is_on_floor())\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":65},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    camera.transform.origin = _headbob(t_bob)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":66},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":67},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    # FOV \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":68},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    var velocity_clamped = clamp(velocity.length(), 0.5, SPRINT_SPEED * 2)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":69},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    var target_fov = BASE_FOV + FOV_CHANGE * velocity_clamped\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":70},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    camera.fov = lerp(camera.fov, target_fov, delta * 8.0)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":71},"children":[{"type":"element","tag":"span","props":{"emptyLinePlaceholder":true},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":72},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    move_and_slide()\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":73},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    \n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":74},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"func _headbob(time) -> Vector3:\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":75},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    var pos = Vector3.ZERO\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":76},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    pos.y = sin(time * BOB_FREQ) * BOB_AMP\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":77},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    pos.x = cos(time * BOB_FREQ / 2) * BOB_AMP\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":78},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    return pos\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"structure"},"children":[{"type":"text","value":"Structure"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"World\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DirectionalLight3D"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WorldEnvironment"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CSBox3D (floor)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Player (CharacterBody3D)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MeshInstance3D"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CollisionShape3D"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Head (Simple Node3D; Acts as a pivot for camera)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Camera3D"}]}]}]}]}]}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"tutorial","depth":2,"text":"Tutorial","children":[{"id":"all-players-code","depth":3,"text":"All players code"}]},{"id":"structure","depth":2,"text":"Structure"}]}},"_type":"markdown","_id":"content:FPS tutorial:1.index.md","_source":"content","_file":"FPS tutorial/1.index.md","_stem":"FPS tutorial/1.index","_extension":"md"}